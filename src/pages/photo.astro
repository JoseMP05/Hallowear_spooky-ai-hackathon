---
import pirateCostume from '@examples/pirate_costume.jpg';
import angelCostume from '@examples/angel_costume.jpg';
import chuckyCostume from '@examples/chucky_costume.jpg';
import devilCostume from '@examples/devil_costume.jpg';
import astronautCostume from '@examples/astronaut_costume.jpg';
import marioCostume from '@examples/mario_costume.jpg';
import princessCostume from '@examples/princess_costume.jpg';
import scaryClownCostume from '@examples/scary-clown_costume.jpg';
import shrekCostume from '@examples/shrek_costume.jpg';
import spidermanCostume from '@examples/spiderman_costume.jpg';
import skeletonCostume from '@examples/skeleton_costume.jpg';
import vampireCostume from '@examples/vampire_costume.jpg';

import { getCldImageUrl } from "astro-cloudinary/helpers"

import Layout from "../layouts/Layout.astro"


import ButtonExample from "../components/ButtonExample.astro"

const { searchParams } = Astro.url
const id = searchParams.get("id")

if (id == null) return Astro.redirect("/")

const url = getCldImageUrl({ src: id })

const costumeExamples = [
  { src: pirateCostume, name: "Pirate", alt: "" },
  { src: angelCostume, name: "Angel", alt: "" },
  { src: chuckyCostume, name: "Chucky", alt: "" },
  { src: devilCostume, name: "Devil", alt: "" },
  { src: astronautCostume, name: "Astronaut", alt: "" },
  { src: marioCostume, name: "Mario Mario", alt: "" },
  { src: princessCostume, name: "Princess", alt: "" },
  { src: scaryClownCostume, name: "Scary Clown", alt: "" },
  { src: shrekCostume, name: "Shrek", alt: "" },
  { src: spidermanCostume, name: "Spiderman", alt: "" },
  { src: skeletonCostume, name: "Skeleton", alt: "" },
  { src: vampireCostume, name: "Vampire", alt: "" },
]
---

<Layout title="Cloudinary Photo">
  <main data-id={id}>
    <!-- <header>
      <h1> Selecciona el tema </h1>
      <button data-topic="ghost">
        ¡Añade fantasmas!
      </button>

      <button data-topic="zombies">
        ¡GROAR ZOMBIES!
      </button>

      <button data-topic="devil">
        ¡El diablo!
      </button>
    </header>

    <img id="original" src={url} />
    <img id="preview" src={url} />

    <small>{url}</small>

    <div>
      <button>
        Descargar en Avif
      </button>
    </div> -->
    <div>
      <section>
        <h1>What costume would you like to try?</h1>
        <form>
          <label>Costume
            <input id="wearInput" type="text" placeholder="Eg: Batman" required>
          </label>
          <label>Add Background
            <input id="backgroundInput" type="text" placeholder="Eg: Night city and batsignal in the sky">
          </label>
          <button id="wear">Wear</button>
        </form>
      </section>
      <section class="examples">
        <h2>Explore some examples</h2>
        <div class="examples__container">
          {costumeExamples.map((example) => (
            <ButtonExample class:list={['examples__buttons']} {...example} />
          ))}
        </div>
      </section>
    </div>
    <div>
      <article>
        <img id="transformation" src={url} alt="hola" width="500px">
        <img id="original" src={url} alt="hola" width="500px">
      </article>
    </div>
  </main>
</Layout>

<style>
  main {
    display: grid;
    grid-template-columns: 1fr 1fr;
    max-width: 1200px;
    margin-inline: auto;
    gap: 32px;
  }

  .examples {
  }

  .examples__container{
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(125px, 1fr));
    gap: 12px;
  }
</style>

<script>
  import { pollForProcessingImage } from '@cloudinary-util/util'
  import { applyTransformationToImage } from "../helpers/applyTransformationToImage"

//   const handleImageUpdate = (url) => {
//   const newUrl = url
// }

  const id = document.querySelector("main")?.getAttribute("data-id") ?? ""
  const imgToTransform = document.getElementById("transformation") as HTMLImageElement
  const buttons = document.querySelectorAll(".examples__buttons")
  const wearButton = document.getElementById("wear") as HTMLButtonElement
  
  wearButton.addEventListener('click', event => {
    event.preventDefault()
    
    const costumeTopic = document.getElementById('wearInput') as HTMLInputElement
    const backgroundTopic = document.getElementById('backgroundInput') as HTMLInputElement
    const transformationUrl = applyTransformationToImage({
      id, 
      imgToTransform, 
      costumeTopic: costumeTopic.value, 
      backgroundTopic: backgroundTopic.value
    })

    // pollForProcessingImage({ src: transformationUrl.src }).
    // then(isProcessed => {
    //   imgToTransform.src = transformationUrl.src
    //   console.log(isProcessed)
    // }).
    // catch(error => console.log("Failed to process the image."))
      // const isProcessed = await pollForProcessingImage({ src: transformationUrl.src })
      // if (isProcessed)
      //   imgToTransform.src = transformationUrl
      // else
      //   console.error("Failed to process the image.")
    })
    
    buttons.forEach((button) => {
      button.addEventListener("click", (e) => {
        const costumeTopic = button.getAttribute("data-topic")
        applyTransformationToImage({id, costumeTopic, imgToTransform })
      })
    })
    
  // const downloadButton = document.querySelector(".download") as HTMLButtonElement
  // downloadButton.addEventListener("click", (e) => {
  //   const url = getCldImageUrl({ src: id, format: "avif" })

  //   const a = document.createElement("a")
  //   a.href = url
  //   a.download = "image.avif"
  //   a.click()
  // })
</script>