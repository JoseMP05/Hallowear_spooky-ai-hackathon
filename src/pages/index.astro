---
import 'dotenv/config'
import Layout from "../layouts/Layout.astro"
import { CldUploadWidget, CldImage } from "astro-cloudinary"

import { getCollection } from "astro:content"
const images = await getCollection("images")
---

<Layout title="Cloudinary Hackathon">
  <main>
    <h1> Hackathon Cloudinary </h1>
    <CldUploadWidget
      id="upload-widget"
      uploadPreset="spooky-hackaton-unsigned-images"
      options={{
        sources: ["local", "camera", "url"],
        multiple: false,
        maxFiles: 1,
        language: "es",
        text: {
          es: {
            or: "O",
            menu: {
              files: "Subir desde tu dispositivo",
              camera: "Cámara",
            },
            local: {
              browse: "Seleccionar",
              dd_title_single: "Arrastra tu imagen aquí",
            },
            camera: {
              take_pic: "Toma una foto y subela",
              cancel: "Cancel",
              explanation: "Asegúrate de que tu cámara esté conectada y que tu navegador permita la captura de la cámara. Cuando estés listo, haz clic en Capturar.",
              camera_error: "Error al acceder a la cámara",
              retry: "Reintentar cámara",
            },
            url: {
                inner_title: "URL pública del archivo a subir:",
            },
          },
        },
      }}
    >
      <button>Upload</button>
    </CldUploadWidget>
    <ul>
      {
        images.map((image) => {
          return (
            <li>
              <a href={`/photo?id=${image.data.public_id}`}>
                <CldImage
                  src={image.data.public_id}
                  width={250}
                  height={250}
                  preserveTransformations={true}
                />
              </a>
            </li>
          )
        })
      }
    </ul>
  </main>

  <script>
    import { navigate } from "astro:transitions/client"

    const widget = document.getElementById("upload-widget")

    if (widget) {
      widget.addEventListener("clduploadwidget:success", ((
        e: CustomEvent<{ info: { public_id: string } }>
      ) => {
        const publicId = e.detail.info.public_id
        navigate(`/photo?id=${publicId}`)
      }) as EventListener)
    }
  </script>

  <style>
    main {
      width: 800px;
      margin: 0 auto;
      padding-top: 100px;
      text-align: center;
    }

    h2 {
      margin-bottom: 32px;
    }

    ul {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 4px;
      list-style: none;
    }
  </style>

  <script></script>
</Layout>