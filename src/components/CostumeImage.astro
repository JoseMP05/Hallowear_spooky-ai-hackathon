---
const {url} = Astro.props
---
<article>
  <div class="container">
    <div class="glow"></div>
    <img id="transformation" src={url} alt="">
  </div>
</article>

<style>
  article {
    position: sticky;
    top: 32px;
  }

  .container{
    position: relative;
  }

  img{
    max-height: calc(100vh - 64px);
    border-radius: 8px;
    position: relative;
    z-index: 20;
  }

  .glow{
    position: absolute;
    inset: 0;
    margin: auto;
    width: 100%;
    height: 100%;
    max-height: 100%;
    background: var(--accent);
  }
  
</style>

<script>
import { animate, stagger, timeline } from "motion"

function getRandomArbitrary(min, max) {
  return Math.random() * (max - min) + min;
}

  const glow = document.querySelector(".glow")
  setInterval(() => {
    animate(glow, {filter:`blur(${Math.floor(getRandomArbitrary(10,100))}px)`}, {duration: 1})
  }, 1000)



   //Change utility
   imgToTransform.style.opacity = ".3"

// const sequence = [
//   ['.costume-form',
//     {
//       opacity: 0,
//       visibility: 'hidden'
//     },
//     {
//       duration: 0.1,
//     }
//   ],
//   ['.examples__title',
//     {
//       opacity: 0,
//       visibility: 'hidden'
//     },
//     {
//       duration: 0.1,
//     }
//   ],
//   [".examples__buttons", 
//     { 
//       x: -20, 
//       opacity: 0, 
//       visibility: 'hidden'
//     }, 
//     { duration: 0.5, 
//       delay: stagger(0.025, {start: 0.1}),
//       at: 0 
//     }
//   ],
//   [".interactive", { minWidth: "0px"}, { duration: 0.001}],
//   ["#appLayout", { gridTemplateColumns: "0px 1fr 1fr" }, { duration: 0.25, at: "-0.25"}],
//   [".share", { minWidth: "auto", width: "100%" }, { duration: 0.25, at: "-0.25"}],
//   [".share section", { opacity: 1, visibility: 'visible' }, { duration: 0.25, at: "-0.2"}]
// ]

//If the speed is too short, we usse 0px o just 0 to avoid jumps
// const control = await timeline(sequence)
// console.log(control)
</script>